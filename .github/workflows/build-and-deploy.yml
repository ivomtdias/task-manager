name: Build and Deploy

on:
  pull_request:
    branches: [ '**' ]
  push:
    branches: [ 'master' ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Update Gradle wrapper permissions
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Run tests
        run: ./gradlew test --no-daemon

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ivomtdias/task-manager:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Check ECR Repository existence
        id: check-ecr
        run: |
          aws ecr describe-repositories --repository-names task-manager-ecr || exit 0
          echo "::set-output name=repository_exists::true"

      - name: Create ECR Repository
        if: steps.check-ecr.outputs.repository_exists != 'true'
        id: ecr
        run: |
          aws ecr create-repository --repository-name task-manager-ecr
          echo "::set-output name=repository_uri::$(aws ecr describe-repositories --repository-names task-manager-ecr | jq -r '.repositories[0].repositoryUri')"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: task-manager-ecr
          IMAGE_TAG: latest
        run: |
          # Build a docker container and push it to ECR 
          docker pull ivomtdias/task-manager:latest
          docker tag ivomtdias/task-manager:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Print Working Directory
        run: pwd

      - name: List Files in Workspace
        run: |
          ls -l

      - name: Deploy to ECS
        run: |
          # Deploy CloudFormation stack
          aws cloudformation deploy \
            --template-file ../infrastructure.yml \
            --stack-name task-manager-stack \
            --capabilities CAPABILITY_IAM
